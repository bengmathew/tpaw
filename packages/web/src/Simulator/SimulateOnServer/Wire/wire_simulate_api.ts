// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.181.2
//   protoc               v3.12.4
// source: wire_simulate_api.proto

/* eslint-disable */
import Long from "long";
import _m0 from "protobufjs/minimal";
import { NoMessage, WireIdAndDouble } from "./wire_common";
import {
  WirePortfolioBalanceEstimationArgs,
  WirePortfolioBalanceEstimationResult,
} from "./wire_estimate_portfolio_balance_api";
import { WirePlanParamsProcessed } from "./wire_plan_params_processed";
import { WirePlanParamsServer } from "./wire_plan_params_server";

export const protobufPackage = "wire";

/** Using proto2 because the absence of required fields in proto3 is painful. */

export interface WireMarketDailySeriesSrcSyntheticConstant {
  annualPercentageChangeVt: number;
  annualPercentageChangeBnd: number;
}

export interface WireSimulationArgs {
  currentPortfolioBalance?: { $case: "estimate"; estimate: WirePortfolioBalanceEstimationArgs } | {
    $case: "noEstimate";
    noEstimate: number;
  } | undefined;
  marketDailySeriesSrc?:
    | { $case: "live"; live: NoMessage }
    | { $case: "syntheticLiveRepeated"; syntheticLiveRepeated: NoMessage }
    | { $case: "syntheticConstant"; syntheticConstant: WireMarketDailySeriesSrcSyntheticConstant }
    | undefined;
  percentiles: number[];
  /**
   * Don't rely on evaluation_timestamp_ms in plan_params because it may be
   * for dateless plans we want this to vary independently.
   */
  timestampForMarketDataMs: number;
  planParams: WirePlanParamsServer | undefined;
}

export interface WireSimulationResultArrays {
  byPercentileByMfnSimulatedPercentileMajorBalanceStartX100: number[];
  byPercentileByMfnSimulatedPercentileMajorWithdrawalsEssentialX100: number[];
  byPercentileByMfnSimulatedPercentileMajorWithdrawalsDiscretionaryX100: number[];
  byPercentileByMfnSimulatedPercentileMajorWithdrawalsGeneralX100: number[];
  byPercentileByMfnSimulatedPercentileMajorWithdrawalsTotalX100: number[];
  byPercentileByMfnSimulatedPercentileMajorWithdrawalsFromSavingsPortfolioRateX10000: number[];
  byPercentileByMfnSimulatedPercentileMajorAfterWithdrawalsAllocationSavingsPortfolioX100: number[];
  byPercentileByMfnSimulatedPercentileMajorAfterWithdrawalsAllocationTotalPortfolioOrZeroIfNoWealthX100: number[];
  tpawByPercentileByMfnSimulatedPercentileMajorSpendingTiltX10000: number[];
  byPercentileEndingBalance: number[];
}

export interface WireSimulationResultTpawNetPresentValueApproxForBalanceSheet {
  futureSavings: WireIdAndDouble[];
  incomeDuringRetirement: WireIdAndDouble[];
  essentialExpenses: WireIdAndDouble[];
  discretionaryExpenses: WireIdAndDouble[];
  legacyTarget: number;
}

export interface WireSimulationPerformance {
  portfolioBalanceEstimationInMs: number;
  simulationInMs: number;
  totalInMs: number;
}

export interface WireSimulationResult {
  portfolioBalanceEstimationResultOpt?: WirePortfolioBalanceEstimationResult | undefined;
  planParamsProcessed: WirePlanParamsProcessed | undefined;
  arrays: WireSimulationResultArrays | undefined;
  numRuns: number;
  numRunsWithInsufficientFunds: number;
  tpawNetPresentValueApproxForBalanceSheetOpt?:
    | WireSimulationResultTpawNetPresentValueApproxForBalanceSheet
    | undefined;
  performance: WireSimulationPerformance | undefined;
}

function createBaseWireMarketDailySeriesSrcSyntheticConstant(): WireMarketDailySeriesSrcSyntheticConstant {
  return { annualPercentageChangeVt: 0, annualPercentageChangeBnd: 0 };
}

export const WireMarketDailySeriesSrcSyntheticConstant = {
  encode(message: WireMarketDailySeriesSrcSyntheticConstant, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.annualPercentageChangeVt !== 0) {
      writer.uint32(9).double(message.annualPercentageChangeVt);
    }
    if (message.annualPercentageChangeBnd !== 0) {
      writer.uint32(17).double(message.annualPercentageChangeBnd);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): WireMarketDailySeriesSrcSyntheticConstant {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseWireMarketDailySeriesSrcSyntheticConstant();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 9) {
            break;
          }

          message.annualPercentageChangeVt = reader.double();
          continue;
        case 2:
          if (tag !== 17) {
            break;
          }

          message.annualPercentageChangeBnd = reader.double();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): WireMarketDailySeriesSrcSyntheticConstant {
    return {
      annualPercentageChangeVt: isSet(object.annualPercentageChangeVt)
        ? globalThis.Number(object.annualPercentageChangeVt)
        : 0,
      annualPercentageChangeBnd: isSet(object.annualPercentageChangeBnd)
        ? globalThis.Number(object.annualPercentageChangeBnd)
        : 0,
    };
  },

  toJSON(message: WireMarketDailySeriesSrcSyntheticConstant): unknown {
    const obj: any = {};
    if (message.annualPercentageChangeVt !== 0) {
      obj.annualPercentageChangeVt = message.annualPercentageChangeVt;
    }
    if (message.annualPercentageChangeBnd !== 0) {
      obj.annualPercentageChangeBnd = message.annualPercentageChangeBnd;
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<WireMarketDailySeriesSrcSyntheticConstant>, I>>(
    base?: I,
  ): WireMarketDailySeriesSrcSyntheticConstant {
    return WireMarketDailySeriesSrcSyntheticConstant.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<WireMarketDailySeriesSrcSyntheticConstant>, I>>(
    object: I,
  ): WireMarketDailySeriesSrcSyntheticConstant {
    const message = createBaseWireMarketDailySeriesSrcSyntheticConstant();
    message.annualPercentageChangeVt = object.annualPercentageChangeVt ?? 0;
    message.annualPercentageChangeBnd = object.annualPercentageChangeBnd ?? 0;
    return message;
  },
};

function createBaseWireSimulationArgs(): WireSimulationArgs {
  return {
    currentPortfolioBalance: undefined,
    marketDailySeriesSrc: undefined,
    percentiles: [],
    timestampForMarketDataMs: 0,
    planParams: undefined,
  };
}

export const WireSimulationArgs = {
  encode(message: WireSimulationArgs, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    switch (message.currentPortfolioBalance?.$case) {
      case "estimate":
        WirePortfolioBalanceEstimationArgs.encode(message.currentPortfolioBalance.estimate, writer.uint32(10).fork())
          .ldelim();
        break;
      case "noEstimate":
        writer.uint32(17).double(message.currentPortfolioBalance.noEstimate);
        break;
    }
    switch (message.marketDailySeriesSrc?.$case) {
      case "live":
        NoMessage.encode(message.marketDailySeriesSrc.live, writer.uint32(26).fork()).ldelim();
        break;
      case "syntheticLiveRepeated":
        NoMessage.encode(message.marketDailySeriesSrc.syntheticLiveRepeated, writer.uint32(34).fork()).ldelim();
        break;
      case "syntheticConstant":
        WireMarketDailySeriesSrcSyntheticConstant.encode(
          message.marketDailySeriesSrc.syntheticConstant,
          writer.uint32(42).fork(),
        ).ldelim();
        break;
    }
    writer.uint32(50).fork();
    for (const v of message.percentiles) {
      writer.uint32(v);
    }
    writer.ldelim();
    if (message.timestampForMarketDataMs !== 0) {
      writer.uint32(56).int64(message.timestampForMarketDataMs);
    }
    if (message.planParams !== undefined) {
      WirePlanParamsServer.encode(message.planParams, writer.uint32(66).fork()).ldelim();
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): WireSimulationArgs {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseWireSimulationArgs();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.currentPortfolioBalance = {
            $case: "estimate",
            estimate: WirePortfolioBalanceEstimationArgs.decode(reader, reader.uint32()),
          };
          continue;
        case 2:
          if (tag !== 17) {
            break;
          }

          message.currentPortfolioBalance = { $case: "noEstimate", noEstimate: reader.double() };
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.marketDailySeriesSrc = { $case: "live", live: NoMessage.decode(reader, reader.uint32()) };
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.marketDailySeriesSrc = {
            $case: "syntheticLiveRepeated",
            syntheticLiveRepeated: NoMessage.decode(reader, reader.uint32()),
          };
          continue;
        case 5:
          if (tag !== 42) {
            break;
          }

          message.marketDailySeriesSrc = {
            $case: "syntheticConstant",
            syntheticConstant: WireMarketDailySeriesSrcSyntheticConstant.decode(reader, reader.uint32()),
          };
          continue;
        case 6:
          if (tag === 48) {
            message.percentiles.push(reader.uint32());

            continue;
          }

          if (tag === 50) {
            const end2 = reader.uint32() + reader.pos;
            while (reader.pos < end2) {
              message.percentiles.push(reader.uint32());
            }

            continue;
          }

          break;
        case 7:
          if (tag !== 56) {
            break;
          }

          message.timestampForMarketDataMs = longToNumber(reader.int64() as Long);
          continue;
        case 8:
          if (tag !== 66) {
            break;
          }

          message.planParams = WirePlanParamsServer.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): WireSimulationArgs {
    return {
      currentPortfolioBalance: isSet(object.estimate)
        ? { $case: "estimate", estimate: WirePortfolioBalanceEstimationArgs.fromJSON(object.estimate) }
        : isSet(object.noEstimate)
        ? { $case: "noEstimate", noEstimate: globalThis.Number(object.noEstimate) }
        : undefined,
      marketDailySeriesSrc: isSet(object.live)
        ? { $case: "live", live: NoMessage.fromJSON(object.live) }
        : isSet(object.syntheticLiveRepeated)
        ? { $case: "syntheticLiveRepeated", syntheticLiveRepeated: NoMessage.fromJSON(object.syntheticLiveRepeated) }
        : isSet(object.syntheticConstant)
        ? {
          $case: "syntheticConstant",
          syntheticConstant: WireMarketDailySeriesSrcSyntheticConstant.fromJSON(object.syntheticConstant),
        }
        : undefined,
      percentiles: globalThis.Array.isArray(object?.percentiles)
        ? object.percentiles.map((e: any) => globalThis.Number(e))
        : [],
      timestampForMarketDataMs: isSet(object.timestampForMarketDataMs)
        ? globalThis.Number(object.timestampForMarketDataMs)
        : 0,
      planParams: isSet(object.planParams) ? WirePlanParamsServer.fromJSON(object.planParams) : undefined,
    };
  },

  toJSON(message: WireSimulationArgs): unknown {
    const obj: any = {};
    if (message.currentPortfolioBalance?.$case === "estimate") {
      obj.estimate = WirePortfolioBalanceEstimationArgs.toJSON(message.currentPortfolioBalance.estimate);
    }
    if (message.currentPortfolioBalance?.$case === "noEstimate") {
      obj.noEstimate = message.currentPortfolioBalance.noEstimate;
    }
    if (message.marketDailySeriesSrc?.$case === "live") {
      obj.live = NoMessage.toJSON(message.marketDailySeriesSrc.live);
    }
    if (message.marketDailySeriesSrc?.$case === "syntheticLiveRepeated") {
      obj.syntheticLiveRepeated = NoMessage.toJSON(message.marketDailySeriesSrc.syntheticLiveRepeated);
    }
    if (message.marketDailySeriesSrc?.$case === "syntheticConstant") {
      obj.syntheticConstant = WireMarketDailySeriesSrcSyntheticConstant.toJSON(
        message.marketDailySeriesSrc.syntheticConstant,
      );
    }
    if (message.percentiles?.length) {
      obj.percentiles = message.percentiles.map((e) => Math.round(e));
    }
    if (message.timestampForMarketDataMs !== 0) {
      obj.timestampForMarketDataMs = Math.round(message.timestampForMarketDataMs);
    }
    if (message.planParams !== undefined) {
      obj.planParams = WirePlanParamsServer.toJSON(message.planParams);
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<WireSimulationArgs>, I>>(base?: I): WireSimulationArgs {
    return WireSimulationArgs.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<WireSimulationArgs>, I>>(object: I): WireSimulationArgs {
    const message = createBaseWireSimulationArgs();
    if (
      object.currentPortfolioBalance?.$case === "estimate" &&
      object.currentPortfolioBalance?.estimate !== undefined &&
      object.currentPortfolioBalance?.estimate !== null
    ) {
      message.currentPortfolioBalance = {
        $case: "estimate",
        estimate: WirePortfolioBalanceEstimationArgs.fromPartial(object.currentPortfolioBalance.estimate),
      };
    }
    if (
      object.currentPortfolioBalance?.$case === "noEstimate" &&
      object.currentPortfolioBalance?.noEstimate !== undefined &&
      object.currentPortfolioBalance?.noEstimate !== null
    ) {
      message.currentPortfolioBalance = { $case: "noEstimate", noEstimate: object.currentPortfolioBalance.noEstimate };
    }
    if (
      object.marketDailySeriesSrc?.$case === "live" &&
      object.marketDailySeriesSrc?.live !== undefined &&
      object.marketDailySeriesSrc?.live !== null
    ) {
      message.marketDailySeriesSrc = { $case: "live", live: NoMessage.fromPartial(object.marketDailySeriesSrc.live) };
    }
    if (
      object.marketDailySeriesSrc?.$case === "syntheticLiveRepeated" &&
      object.marketDailySeriesSrc?.syntheticLiveRepeated !== undefined &&
      object.marketDailySeriesSrc?.syntheticLiveRepeated !== null
    ) {
      message.marketDailySeriesSrc = {
        $case: "syntheticLiveRepeated",
        syntheticLiveRepeated: NoMessage.fromPartial(object.marketDailySeriesSrc.syntheticLiveRepeated),
      };
    }
    if (
      object.marketDailySeriesSrc?.$case === "syntheticConstant" &&
      object.marketDailySeriesSrc?.syntheticConstant !== undefined &&
      object.marketDailySeriesSrc?.syntheticConstant !== null
    ) {
      message.marketDailySeriesSrc = {
        $case: "syntheticConstant",
        syntheticConstant: WireMarketDailySeriesSrcSyntheticConstant.fromPartial(
          object.marketDailySeriesSrc.syntheticConstant,
        ),
      };
    }
    message.percentiles = object.percentiles?.map((e) => e) || [];
    message.timestampForMarketDataMs = object.timestampForMarketDataMs ?? 0;
    message.planParams = (object.planParams !== undefined && object.planParams !== null)
      ? WirePlanParamsServer.fromPartial(object.planParams)
      : undefined;
    return message;
  },
};

function createBaseWireSimulationResultArrays(): WireSimulationResultArrays {
  return {
    byPercentileByMfnSimulatedPercentileMajorBalanceStartX100: [],
    byPercentileByMfnSimulatedPercentileMajorWithdrawalsEssentialX100: [],
    byPercentileByMfnSimulatedPercentileMajorWithdrawalsDiscretionaryX100: [],
    byPercentileByMfnSimulatedPercentileMajorWithdrawalsGeneralX100: [],
    byPercentileByMfnSimulatedPercentileMajorWithdrawalsTotalX100: [],
    byPercentileByMfnSimulatedPercentileMajorWithdrawalsFromSavingsPortfolioRateX10000: [],
    byPercentileByMfnSimulatedPercentileMajorAfterWithdrawalsAllocationSavingsPortfolioX100: [],
    byPercentileByMfnSimulatedPercentileMajorAfterWithdrawalsAllocationTotalPortfolioOrZeroIfNoWealthX100: [],
    tpawByPercentileByMfnSimulatedPercentileMajorSpendingTiltX10000: [],
    byPercentileEndingBalance: [],
  };
}

export const WireSimulationResultArrays = {
  encode(message: WireSimulationResultArrays, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    writer.uint32(10).fork();
    for (const v of message.byPercentileByMfnSimulatedPercentileMajorBalanceStartX100) {
      writer.int64(v);
    }
    writer.ldelim();
    writer.uint32(18).fork();
    for (const v of message.byPercentileByMfnSimulatedPercentileMajorWithdrawalsEssentialX100) {
      writer.int64(v);
    }
    writer.ldelim();
    writer.uint32(26).fork();
    for (const v of message.byPercentileByMfnSimulatedPercentileMajorWithdrawalsDiscretionaryX100) {
      writer.int64(v);
    }
    writer.ldelim();
    writer.uint32(34).fork();
    for (const v of message.byPercentileByMfnSimulatedPercentileMajorWithdrawalsGeneralX100) {
      writer.int64(v);
    }
    writer.ldelim();
    writer.uint32(42).fork();
    for (const v of message.byPercentileByMfnSimulatedPercentileMajorWithdrawalsTotalX100) {
      writer.int64(v);
    }
    writer.ldelim();
    writer.uint32(50).fork();
    for (const v of message.byPercentileByMfnSimulatedPercentileMajorWithdrawalsFromSavingsPortfolioRateX10000) {
      writer.int64(v);
    }
    writer.ldelim();
    writer.uint32(58).fork();
    for (const v of message.byPercentileByMfnSimulatedPercentileMajorAfterWithdrawalsAllocationSavingsPortfolioX100) {
      writer.int64(v);
    }
    writer.ldelim();
    writer.uint32(66).fork();
    for (
      const v of message
        .byPercentileByMfnSimulatedPercentileMajorAfterWithdrawalsAllocationTotalPortfolioOrZeroIfNoWealthX100
    ) {
      writer.int64(v);
    }
    writer.ldelim();
    writer.uint32(74).fork();
    for (const v of message.tpawByPercentileByMfnSimulatedPercentileMajorSpendingTiltX10000) {
      writer.int64(v);
    }
    writer.ldelim();
    writer.uint32(82).fork();
    for (const v of message.byPercentileEndingBalance) {
      writer.double(v);
    }
    writer.ldelim();
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): WireSimulationResultArrays {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseWireSimulationResultArrays();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag === 8) {
            message.byPercentileByMfnSimulatedPercentileMajorBalanceStartX100.push(
              longToNumber(reader.int64() as Long),
            );

            continue;
          }

          if (tag === 10) {
            const end2 = reader.uint32() + reader.pos;
            while (reader.pos < end2) {
              message.byPercentileByMfnSimulatedPercentileMajorBalanceStartX100.push(
                longToNumber(reader.int64() as Long),
              );
            }

            continue;
          }

          break;
        case 2:
          if (tag === 16) {
            message.byPercentileByMfnSimulatedPercentileMajorWithdrawalsEssentialX100.push(
              longToNumber(reader.int64() as Long),
            );

            continue;
          }

          if (tag === 18) {
            const end2 = reader.uint32() + reader.pos;
            while (reader.pos < end2) {
              message.byPercentileByMfnSimulatedPercentileMajorWithdrawalsEssentialX100.push(
                longToNumber(reader.int64() as Long),
              );
            }

            continue;
          }

          break;
        case 3:
          if (tag === 24) {
            message.byPercentileByMfnSimulatedPercentileMajorWithdrawalsDiscretionaryX100.push(
              longToNumber(reader.int64() as Long),
            );

            continue;
          }

          if (tag === 26) {
            const end2 = reader.uint32() + reader.pos;
            while (reader.pos < end2) {
              message.byPercentileByMfnSimulatedPercentileMajorWithdrawalsDiscretionaryX100.push(
                longToNumber(reader.int64() as Long),
              );
            }

            continue;
          }

          break;
        case 4:
          if (tag === 32) {
            message.byPercentileByMfnSimulatedPercentileMajorWithdrawalsGeneralX100.push(
              longToNumber(reader.int64() as Long),
            );

            continue;
          }

          if (tag === 34) {
            const end2 = reader.uint32() + reader.pos;
            while (reader.pos < end2) {
              message.byPercentileByMfnSimulatedPercentileMajorWithdrawalsGeneralX100.push(
                longToNumber(reader.int64() as Long),
              );
            }

            continue;
          }

          break;
        case 5:
          if (tag === 40) {
            message.byPercentileByMfnSimulatedPercentileMajorWithdrawalsTotalX100.push(
              longToNumber(reader.int64() as Long),
            );

            continue;
          }

          if (tag === 42) {
            const end2 = reader.uint32() + reader.pos;
            while (reader.pos < end2) {
              message.byPercentileByMfnSimulatedPercentileMajorWithdrawalsTotalX100.push(
                longToNumber(reader.int64() as Long),
              );
            }

            continue;
          }

          break;
        case 6:
          if (tag === 48) {
            message.byPercentileByMfnSimulatedPercentileMajorWithdrawalsFromSavingsPortfolioRateX10000.push(
              longToNumber(reader.int64() as Long),
            );

            continue;
          }

          if (tag === 50) {
            const end2 = reader.uint32() + reader.pos;
            while (reader.pos < end2) {
              message.byPercentileByMfnSimulatedPercentileMajorWithdrawalsFromSavingsPortfolioRateX10000.push(
                longToNumber(reader.int64() as Long),
              );
            }

            continue;
          }

          break;
        case 7:
          if (tag === 56) {
            message.byPercentileByMfnSimulatedPercentileMajorAfterWithdrawalsAllocationSavingsPortfolioX100.push(
              longToNumber(reader.int64() as Long),
            );

            continue;
          }

          if (tag === 58) {
            const end2 = reader.uint32() + reader.pos;
            while (reader.pos < end2) {
              message.byPercentileByMfnSimulatedPercentileMajorAfterWithdrawalsAllocationSavingsPortfolioX100.push(
                longToNumber(reader.int64() as Long),
              );
            }

            continue;
          }

          break;
        case 8:
          if (tag === 64) {
            message
              .byPercentileByMfnSimulatedPercentileMajorAfterWithdrawalsAllocationTotalPortfolioOrZeroIfNoWealthX100
              .push(longToNumber(reader.int64() as Long));

            continue;
          }

          if (tag === 66) {
            const end2 = reader.uint32() + reader.pos;
            while (reader.pos < end2) {
              message
                .byPercentileByMfnSimulatedPercentileMajorAfterWithdrawalsAllocationTotalPortfolioOrZeroIfNoWealthX100
                .push(longToNumber(reader.int64() as Long));
            }

            continue;
          }

          break;
        case 9:
          if (tag === 72) {
            message.tpawByPercentileByMfnSimulatedPercentileMajorSpendingTiltX10000.push(
              longToNumber(reader.int64() as Long),
            );

            continue;
          }

          if (tag === 74) {
            const end2 = reader.uint32() + reader.pos;
            while (reader.pos < end2) {
              message.tpawByPercentileByMfnSimulatedPercentileMajorSpendingTiltX10000.push(
                longToNumber(reader.int64() as Long),
              );
            }

            continue;
          }

          break;
        case 10:
          if (tag === 81) {
            message.byPercentileEndingBalance.push(reader.double());

            continue;
          }

          if (tag === 82) {
            const end2 = reader.uint32() + reader.pos;
            while (reader.pos < end2) {
              message.byPercentileEndingBalance.push(reader.double());
            }

            continue;
          }

          break;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): WireSimulationResultArrays {
    return {
      byPercentileByMfnSimulatedPercentileMajorBalanceStartX100:
        globalThis.Array.isArray(object?.byPercentileByMfnSimulatedPercentileMajorBalanceStartX100)
          ? object.byPercentileByMfnSimulatedPercentileMajorBalanceStartX100.map((e: any) => globalThis.Number(e))
          : [],
      byPercentileByMfnSimulatedPercentileMajorWithdrawalsEssentialX100:
        globalThis.Array.isArray(object?.byPercentileByMfnSimulatedPercentileMajorWithdrawalsEssentialX100)
          ? object.byPercentileByMfnSimulatedPercentileMajorWithdrawalsEssentialX100.map((e: any) =>
            globalThis.Number(e)
          )
          : [],
      byPercentileByMfnSimulatedPercentileMajorWithdrawalsDiscretionaryX100:
        globalThis.Array.isArray(object?.byPercentileByMfnSimulatedPercentileMajorWithdrawalsDiscretionaryX100)
          ? object.byPercentileByMfnSimulatedPercentileMajorWithdrawalsDiscretionaryX100.map((e: any) =>
            globalThis.Number(e)
          )
          : [],
      byPercentileByMfnSimulatedPercentileMajorWithdrawalsGeneralX100:
        globalThis.Array.isArray(object?.byPercentileByMfnSimulatedPercentileMajorWithdrawalsGeneralX100)
          ? object.byPercentileByMfnSimulatedPercentileMajorWithdrawalsGeneralX100.map((e: any) => globalThis.Number(e))
          : [],
      byPercentileByMfnSimulatedPercentileMajorWithdrawalsTotalX100:
        globalThis.Array.isArray(object?.byPercentileByMfnSimulatedPercentileMajorWithdrawalsTotalX100)
          ? object.byPercentileByMfnSimulatedPercentileMajorWithdrawalsTotalX100.map((e: any) => globalThis.Number(e))
          : [],
      byPercentileByMfnSimulatedPercentileMajorWithdrawalsFromSavingsPortfolioRateX10000:
        globalThis.Array.isArray(
            object?.byPercentileByMfnSimulatedPercentileMajorWithdrawalsFromSavingsPortfolioRateX10000,
          )
          ? object.byPercentileByMfnSimulatedPercentileMajorWithdrawalsFromSavingsPortfolioRateX10000.map((e: any) =>
            globalThis.Number(e)
          )
          : [],
      byPercentileByMfnSimulatedPercentileMajorAfterWithdrawalsAllocationSavingsPortfolioX100:
        globalThis.Array.isArray(
            object?.byPercentileByMfnSimulatedPercentileMajorAfterWithdrawalsAllocationSavingsPortfolioX100,
          )
          ? object.byPercentileByMfnSimulatedPercentileMajorAfterWithdrawalsAllocationSavingsPortfolioX100.map((
            e: any,
          ) => globalThis.Number(e))
          : [],
      byPercentileByMfnSimulatedPercentileMajorAfterWithdrawalsAllocationTotalPortfolioOrZeroIfNoWealthX100:
        globalThis.Array.isArray(
            object
              ?.byPercentileByMfnSimulatedPercentileMajorAfterWithdrawalsAllocationTotalPortfolioOrZeroIfNoWealthX100,
          )
          ? object.byPercentileByMfnSimulatedPercentileMajorAfterWithdrawalsAllocationTotalPortfolioOrZeroIfNoWealthX100
            .map((e: any) => globalThis.Number(e))
          : [],
      tpawByPercentileByMfnSimulatedPercentileMajorSpendingTiltX10000:
        globalThis.Array.isArray(object?.tpawByPercentileByMfnSimulatedPercentileMajorSpendingTiltX10000)
          ? object.tpawByPercentileByMfnSimulatedPercentileMajorSpendingTiltX10000.map((e: any) => globalThis.Number(e))
          : [],
      byPercentileEndingBalance: globalThis.Array.isArray(object?.byPercentileEndingBalance)
        ? object.byPercentileEndingBalance.map((e: any) => globalThis.Number(e))
        : [],
    };
  },

  toJSON(message: WireSimulationResultArrays): unknown {
    const obj: any = {};
    if (message.byPercentileByMfnSimulatedPercentileMajorBalanceStartX100?.length) {
      obj.byPercentileByMfnSimulatedPercentileMajorBalanceStartX100 = message
        .byPercentileByMfnSimulatedPercentileMajorBalanceStartX100.map((e) => Math.round(e));
    }
    if (message.byPercentileByMfnSimulatedPercentileMajorWithdrawalsEssentialX100?.length) {
      obj.byPercentileByMfnSimulatedPercentileMajorWithdrawalsEssentialX100 = message
        .byPercentileByMfnSimulatedPercentileMajorWithdrawalsEssentialX100.map((e) => Math.round(e));
    }
    if (message.byPercentileByMfnSimulatedPercentileMajorWithdrawalsDiscretionaryX100?.length) {
      obj.byPercentileByMfnSimulatedPercentileMajorWithdrawalsDiscretionaryX100 = message
        .byPercentileByMfnSimulatedPercentileMajorWithdrawalsDiscretionaryX100.map((e) => Math.round(e));
    }
    if (message.byPercentileByMfnSimulatedPercentileMajorWithdrawalsGeneralX100?.length) {
      obj.byPercentileByMfnSimulatedPercentileMajorWithdrawalsGeneralX100 = message
        .byPercentileByMfnSimulatedPercentileMajorWithdrawalsGeneralX100.map((e) => Math.round(e));
    }
    if (message.byPercentileByMfnSimulatedPercentileMajorWithdrawalsTotalX100?.length) {
      obj.byPercentileByMfnSimulatedPercentileMajorWithdrawalsTotalX100 = message
        .byPercentileByMfnSimulatedPercentileMajorWithdrawalsTotalX100.map((e) => Math.round(e));
    }
    if (message.byPercentileByMfnSimulatedPercentileMajorWithdrawalsFromSavingsPortfolioRateX10000?.length) {
      obj.byPercentileByMfnSimulatedPercentileMajorWithdrawalsFromSavingsPortfolioRateX10000 = message
        .byPercentileByMfnSimulatedPercentileMajorWithdrawalsFromSavingsPortfolioRateX10000.map((e) => Math.round(e));
    }
    if (message.byPercentileByMfnSimulatedPercentileMajorAfterWithdrawalsAllocationSavingsPortfolioX100?.length) {
      obj.byPercentileByMfnSimulatedPercentileMajorAfterWithdrawalsAllocationSavingsPortfolioX100 = message
        .byPercentileByMfnSimulatedPercentileMajorAfterWithdrawalsAllocationSavingsPortfolioX100.map((e) =>
          Math.round(e)
        );
    }
    if (
      message.byPercentileByMfnSimulatedPercentileMajorAfterWithdrawalsAllocationTotalPortfolioOrZeroIfNoWealthX100
        ?.length
    ) {
      obj.byPercentileByMfnSimulatedPercentileMajorAfterWithdrawalsAllocationTotalPortfolioOrZeroIfNoWealthX100 =
        message.byPercentileByMfnSimulatedPercentileMajorAfterWithdrawalsAllocationTotalPortfolioOrZeroIfNoWealthX100
          .map((e) => Math.round(e));
    }
    if (message.tpawByPercentileByMfnSimulatedPercentileMajorSpendingTiltX10000?.length) {
      obj.tpawByPercentileByMfnSimulatedPercentileMajorSpendingTiltX10000 = message
        .tpawByPercentileByMfnSimulatedPercentileMajorSpendingTiltX10000.map((e) => Math.round(e));
    }
    if (message.byPercentileEndingBalance?.length) {
      obj.byPercentileEndingBalance = message.byPercentileEndingBalance;
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<WireSimulationResultArrays>, I>>(base?: I): WireSimulationResultArrays {
    return WireSimulationResultArrays.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<WireSimulationResultArrays>, I>>(object: I): WireSimulationResultArrays {
    const message = createBaseWireSimulationResultArrays();
    message.byPercentileByMfnSimulatedPercentileMajorBalanceStartX100 =
      object.byPercentileByMfnSimulatedPercentileMajorBalanceStartX100?.map((e) => e) || [];
    message.byPercentileByMfnSimulatedPercentileMajorWithdrawalsEssentialX100 =
      object.byPercentileByMfnSimulatedPercentileMajorWithdrawalsEssentialX100?.map((e) => e) || [];
    message.byPercentileByMfnSimulatedPercentileMajorWithdrawalsDiscretionaryX100 =
      object.byPercentileByMfnSimulatedPercentileMajorWithdrawalsDiscretionaryX100?.map((e) => e) || [];
    message.byPercentileByMfnSimulatedPercentileMajorWithdrawalsGeneralX100 =
      object.byPercentileByMfnSimulatedPercentileMajorWithdrawalsGeneralX100?.map((e) => e) || [];
    message.byPercentileByMfnSimulatedPercentileMajorWithdrawalsTotalX100 =
      object.byPercentileByMfnSimulatedPercentileMajorWithdrawalsTotalX100?.map((e) => e) || [];
    message.byPercentileByMfnSimulatedPercentileMajorWithdrawalsFromSavingsPortfolioRateX10000 =
      object.byPercentileByMfnSimulatedPercentileMajorWithdrawalsFromSavingsPortfolioRateX10000?.map((e) => e) || [];
    message.byPercentileByMfnSimulatedPercentileMajorAfterWithdrawalsAllocationSavingsPortfolioX100 =
      object.byPercentileByMfnSimulatedPercentileMajorAfterWithdrawalsAllocationSavingsPortfolioX100?.map((e) => e) ||
      [];
    message.byPercentileByMfnSimulatedPercentileMajorAfterWithdrawalsAllocationTotalPortfolioOrZeroIfNoWealthX100 =
      object.byPercentileByMfnSimulatedPercentileMajorAfterWithdrawalsAllocationTotalPortfolioOrZeroIfNoWealthX100?.map(
        (e) => e
      ) || [];
    message.tpawByPercentileByMfnSimulatedPercentileMajorSpendingTiltX10000 =
      object.tpawByPercentileByMfnSimulatedPercentileMajorSpendingTiltX10000?.map((e) => e) || [];
    message.byPercentileEndingBalance = object.byPercentileEndingBalance?.map((e) => e) || [];
    return message;
  },
};

function createBaseWireSimulationResultTpawNetPresentValueApproxForBalanceSheet(): WireSimulationResultTpawNetPresentValueApproxForBalanceSheet {
  return {
    futureSavings: [],
    incomeDuringRetirement: [],
    essentialExpenses: [],
    discretionaryExpenses: [],
    legacyTarget: 0,
  };
}

export const WireSimulationResultTpawNetPresentValueApproxForBalanceSheet = {
  encode(
    message: WireSimulationResultTpawNetPresentValueApproxForBalanceSheet,
    writer: _m0.Writer = _m0.Writer.create(),
  ): _m0.Writer {
    for (const v of message.futureSavings) {
      WireIdAndDouble.encode(v!, writer.uint32(10).fork()).ldelim();
    }
    for (const v of message.incomeDuringRetirement) {
      WireIdAndDouble.encode(v!, writer.uint32(18).fork()).ldelim();
    }
    for (const v of message.essentialExpenses) {
      WireIdAndDouble.encode(v!, writer.uint32(26).fork()).ldelim();
    }
    for (const v of message.discretionaryExpenses) {
      WireIdAndDouble.encode(v!, writer.uint32(34).fork()).ldelim();
    }
    if (message.legacyTarget !== 0) {
      writer.uint32(41).double(message.legacyTarget);
    }
    return writer;
  },

  decode(
    input: _m0.Reader | Uint8Array,
    length?: number,
  ): WireSimulationResultTpawNetPresentValueApproxForBalanceSheet {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseWireSimulationResultTpawNetPresentValueApproxForBalanceSheet();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.futureSavings.push(WireIdAndDouble.decode(reader, reader.uint32()));
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.incomeDuringRetirement.push(WireIdAndDouble.decode(reader, reader.uint32()));
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.essentialExpenses.push(WireIdAndDouble.decode(reader, reader.uint32()));
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.discretionaryExpenses.push(WireIdAndDouble.decode(reader, reader.uint32()));
          continue;
        case 5:
          if (tag !== 41) {
            break;
          }

          message.legacyTarget = reader.double();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): WireSimulationResultTpawNetPresentValueApproxForBalanceSheet {
    return {
      futureSavings: globalThis.Array.isArray(object?.futureSavings)
        ? object.futureSavings.map((e: any) => WireIdAndDouble.fromJSON(e))
        : [],
      incomeDuringRetirement: globalThis.Array.isArray(object?.incomeDuringRetirement)
        ? object.incomeDuringRetirement.map((e: any) => WireIdAndDouble.fromJSON(e))
        : [],
      essentialExpenses: globalThis.Array.isArray(object?.essentialExpenses)
        ? object.essentialExpenses.map((e: any) => WireIdAndDouble.fromJSON(e))
        : [],
      discretionaryExpenses: globalThis.Array.isArray(object?.discretionaryExpenses)
        ? object.discretionaryExpenses.map((e: any) => WireIdAndDouble.fromJSON(e))
        : [],
      legacyTarget: isSet(object.legacyTarget) ? globalThis.Number(object.legacyTarget) : 0,
    };
  },

  toJSON(message: WireSimulationResultTpawNetPresentValueApproxForBalanceSheet): unknown {
    const obj: any = {};
    if (message.futureSavings?.length) {
      obj.futureSavings = message.futureSavings.map((e) => WireIdAndDouble.toJSON(e));
    }
    if (message.incomeDuringRetirement?.length) {
      obj.incomeDuringRetirement = message.incomeDuringRetirement.map((e) => WireIdAndDouble.toJSON(e));
    }
    if (message.essentialExpenses?.length) {
      obj.essentialExpenses = message.essentialExpenses.map((e) => WireIdAndDouble.toJSON(e));
    }
    if (message.discretionaryExpenses?.length) {
      obj.discretionaryExpenses = message.discretionaryExpenses.map((e) => WireIdAndDouble.toJSON(e));
    }
    if (message.legacyTarget !== 0) {
      obj.legacyTarget = message.legacyTarget;
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<WireSimulationResultTpawNetPresentValueApproxForBalanceSheet>, I>>(
    base?: I,
  ): WireSimulationResultTpawNetPresentValueApproxForBalanceSheet {
    return WireSimulationResultTpawNetPresentValueApproxForBalanceSheet.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<WireSimulationResultTpawNetPresentValueApproxForBalanceSheet>, I>>(
    object: I,
  ): WireSimulationResultTpawNetPresentValueApproxForBalanceSheet {
    const message = createBaseWireSimulationResultTpawNetPresentValueApproxForBalanceSheet();
    message.futureSavings = object.futureSavings?.map((e) => WireIdAndDouble.fromPartial(e)) || [];
    message.incomeDuringRetirement = object.incomeDuringRetirement?.map((e) => WireIdAndDouble.fromPartial(e)) || [];
    message.essentialExpenses = object.essentialExpenses?.map((e) => WireIdAndDouble.fromPartial(e)) || [];
    message.discretionaryExpenses = object.discretionaryExpenses?.map((e) => WireIdAndDouble.fromPartial(e)) || [];
    message.legacyTarget = object.legacyTarget ?? 0;
    return message;
  },
};

function createBaseWireSimulationPerformance(): WireSimulationPerformance {
  return { portfolioBalanceEstimationInMs: 0, simulationInMs: 0, totalInMs: 0 };
}

export const WireSimulationPerformance = {
  encode(message: WireSimulationPerformance, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.portfolioBalanceEstimationInMs !== 0) {
      writer.uint32(8).int64(message.portfolioBalanceEstimationInMs);
    }
    if (message.simulationInMs !== 0) {
      writer.uint32(16).int64(message.simulationInMs);
    }
    if (message.totalInMs !== 0) {
      writer.uint32(24).int64(message.totalInMs);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): WireSimulationPerformance {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseWireSimulationPerformance();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.portfolioBalanceEstimationInMs = longToNumber(reader.int64() as Long);
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.simulationInMs = longToNumber(reader.int64() as Long);
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.totalInMs = longToNumber(reader.int64() as Long);
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): WireSimulationPerformance {
    return {
      portfolioBalanceEstimationInMs: isSet(object.portfolioBalanceEstimationInMs)
        ? globalThis.Number(object.portfolioBalanceEstimationInMs)
        : 0,
      simulationInMs: isSet(object.simulationInMs) ? globalThis.Number(object.simulationInMs) : 0,
      totalInMs: isSet(object.totalInMs) ? globalThis.Number(object.totalInMs) : 0,
    };
  },

  toJSON(message: WireSimulationPerformance): unknown {
    const obj: any = {};
    if (message.portfolioBalanceEstimationInMs !== 0) {
      obj.portfolioBalanceEstimationInMs = Math.round(message.portfolioBalanceEstimationInMs);
    }
    if (message.simulationInMs !== 0) {
      obj.simulationInMs = Math.round(message.simulationInMs);
    }
    if (message.totalInMs !== 0) {
      obj.totalInMs = Math.round(message.totalInMs);
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<WireSimulationPerformance>, I>>(base?: I): WireSimulationPerformance {
    return WireSimulationPerformance.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<WireSimulationPerformance>, I>>(object: I): WireSimulationPerformance {
    const message = createBaseWireSimulationPerformance();
    message.portfolioBalanceEstimationInMs = object.portfolioBalanceEstimationInMs ?? 0;
    message.simulationInMs = object.simulationInMs ?? 0;
    message.totalInMs = object.totalInMs ?? 0;
    return message;
  },
};

function createBaseWireSimulationResult(): WireSimulationResult {
  return {
    portfolioBalanceEstimationResultOpt: undefined,
    planParamsProcessed: undefined,
    arrays: undefined,
    numRuns: 0,
    numRunsWithInsufficientFunds: 0,
    tpawNetPresentValueApproxForBalanceSheetOpt: undefined,
    performance: undefined,
  };
}

export const WireSimulationResult = {
  encode(message: WireSimulationResult, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.portfolioBalanceEstimationResultOpt !== undefined) {
      WirePortfolioBalanceEstimationResult.encode(message.portfolioBalanceEstimationResultOpt, writer.uint32(10).fork())
        .ldelim();
    }
    if (message.planParamsProcessed !== undefined) {
      WirePlanParamsProcessed.encode(message.planParamsProcessed, writer.uint32(18).fork()).ldelim();
    }
    if (message.arrays !== undefined) {
      WireSimulationResultArrays.encode(message.arrays, writer.uint32(26).fork()).ldelim();
    }
    if (message.numRuns !== 0) {
      writer.uint32(32).uint32(message.numRuns);
    }
    if (message.numRunsWithInsufficientFunds !== 0) {
      writer.uint32(40).uint32(message.numRunsWithInsufficientFunds);
    }
    if (message.tpawNetPresentValueApproxForBalanceSheetOpt !== undefined) {
      WireSimulationResultTpawNetPresentValueApproxForBalanceSheet.encode(
        message.tpawNetPresentValueApproxForBalanceSheetOpt,
        writer.uint32(50).fork(),
      ).ldelim();
    }
    if (message.performance !== undefined) {
      WireSimulationPerformance.encode(message.performance, writer.uint32(58).fork()).ldelim();
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): WireSimulationResult {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseWireSimulationResult();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.portfolioBalanceEstimationResultOpt = WirePortfolioBalanceEstimationResult.decode(
            reader,
            reader.uint32(),
          );
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.planParamsProcessed = WirePlanParamsProcessed.decode(reader, reader.uint32());
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.arrays = WireSimulationResultArrays.decode(reader, reader.uint32());
          continue;
        case 4:
          if (tag !== 32) {
            break;
          }

          message.numRuns = reader.uint32();
          continue;
        case 5:
          if (tag !== 40) {
            break;
          }

          message.numRunsWithInsufficientFunds = reader.uint32();
          continue;
        case 6:
          if (tag !== 50) {
            break;
          }

          message.tpawNetPresentValueApproxForBalanceSheetOpt =
            WireSimulationResultTpawNetPresentValueApproxForBalanceSheet.decode(reader, reader.uint32());
          continue;
        case 7:
          if (tag !== 58) {
            break;
          }

          message.performance = WireSimulationPerformance.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): WireSimulationResult {
    return {
      portfolioBalanceEstimationResultOpt: isSet(object.portfolioBalanceEstimationResultOpt)
        ? WirePortfolioBalanceEstimationResult.fromJSON(object.portfolioBalanceEstimationResultOpt)
        : undefined,
      planParamsProcessed: isSet(object.planParamsProcessed)
        ? WirePlanParamsProcessed.fromJSON(object.planParamsProcessed)
        : undefined,
      arrays: isSet(object.arrays) ? WireSimulationResultArrays.fromJSON(object.arrays) : undefined,
      numRuns: isSet(object.numRuns) ? globalThis.Number(object.numRuns) : 0,
      numRunsWithInsufficientFunds: isSet(object.numRunsWithInsufficientFunds)
        ? globalThis.Number(object.numRunsWithInsufficientFunds)
        : 0,
      tpawNetPresentValueApproxForBalanceSheetOpt: isSet(object.tpawNetPresentValueApproxForBalanceSheetOpt)
        ? WireSimulationResultTpawNetPresentValueApproxForBalanceSheet.fromJSON(
          object.tpawNetPresentValueApproxForBalanceSheetOpt,
        )
        : undefined,
      performance: isSet(object.performance) ? WireSimulationPerformance.fromJSON(object.performance) : undefined,
    };
  },

  toJSON(message: WireSimulationResult): unknown {
    const obj: any = {};
    if (message.portfolioBalanceEstimationResultOpt !== undefined) {
      obj.portfolioBalanceEstimationResultOpt = WirePortfolioBalanceEstimationResult.toJSON(
        message.portfolioBalanceEstimationResultOpt,
      );
    }
    if (message.planParamsProcessed !== undefined) {
      obj.planParamsProcessed = WirePlanParamsProcessed.toJSON(message.planParamsProcessed);
    }
    if (message.arrays !== undefined) {
      obj.arrays = WireSimulationResultArrays.toJSON(message.arrays);
    }
    if (message.numRuns !== 0) {
      obj.numRuns = Math.round(message.numRuns);
    }
    if (message.numRunsWithInsufficientFunds !== 0) {
      obj.numRunsWithInsufficientFunds = Math.round(message.numRunsWithInsufficientFunds);
    }
    if (message.tpawNetPresentValueApproxForBalanceSheetOpt !== undefined) {
      obj.tpawNetPresentValueApproxForBalanceSheetOpt = WireSimulationResultTpawNetPresentValueApproxForBalanceSheet
        .toJSON(message.tpawNetPresentValueApproxForBalanceSheetOpt);
    }
    if (message.performance !== undefined) {
      obj.performance = WireSimulationPerformance.toJSON(message.performance);
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<WireSimulationResult>, I>>(base?: I): WireSimulationResult {
    return WireSimulationResult.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<WireSimulationResult>, I>>(object: I): WireSimulationResult {
    const message = createBaseWireSimulationResult();
    message.portfolioBalanceEstimationResultOpt =
      (object.portfolioBalanceEstimationResultOpt !== undefined && object.portfolioBalanceEstimationResultOpt !== null)
        ? WirePortfolioBalanceEstimationResult.fromPartial(object.portfolioBalanceEstimationResultOpt)
        : undefined;
    message.planParamsProcessed = (object.planParamsProcessed !== undefined && object.planParamsProcessed !== null)
      ? WirePlanParamsProcessed.fromPartial(object.planParamsProcessed)
      : undefined;
    message.arrays = (object.arrays !== undefined && object.arrays !== null)
      ? WireSimulationResultArrays.fromPartial(object.arrays)
      : undefined;
    message.numRuns = object.numRuns ?? 0;
    message.numRunsWithInsufficientFunds = object.numRunsWithInsufficientFunds ?? 0;
    message.tpawNetPresentValueApproxForBalanceSheetOpt =
      (object.tpawNetPresentValueApproxForBalanceSheetOpt !== undefined &&
          object.tpawNetPresentValueApproxForBalanceSheetOpt !== null)
        ? WireSimulationResultTpawNetPresentValueApproxForBalanceSheet.fromPartial(
          object.tpawNetPresentValueApproxForBalanceSheetOpt,
        )
        : undefined;
    message.performance = (object.performance !== undefined && object.performance !== null)
      ? WireSimulationPerformance.fromPartial(object.performance)
      : undefined;
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends { $case: string } ? { [K in keyof Omit<T, "$case">]?: DeepPartial<T[K]> } & { $case: T["$case"] }
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

type KeysOfUnion<T> = T extends T ? keyof T : never;
export type Exact<P, I extends P> = P extends Builtin ? P
  : P & { [K in keyof P]: Exact<P[K], I[K]> } & { [K in Exclude<keyof I, KeysOfUnion<P>>]: never };

function longToNumber(long: Long): number {
  if (long.gt(globalThis.Number.MAX_SAFE_INTEGER)) {
    throw new globalThis.Error("Value is larger than Number.MAX_SAFE_INTEGER");
  }
  if (long.lt(globalThis.Number.MIN_SAFE_INTEGER)) {
    throw new globalThis.Error("Value is smaller than Number.MIN_SAFE_INTEGER");
  }
  return long.toNumber();
}

if (_m0.util.Long !== Long) {
  _m0.util.Long = Long as any;
  _m0.configure();
}

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}
