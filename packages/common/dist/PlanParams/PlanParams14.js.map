{"version":3,"file":"PlanParams14.js","sourceRoot":"","sources":["../../src/PlanParams/PlanParams14.ts"],"names":[],"mappings":"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","sourcesContent":["// import {getDefaultParams} from './DefaultPlanParams'\n// import {TPAWParamsV13} from './TPAWParamsOld/TPAWParamsV13'\nimport {\n  array,\n  boolean,\n  bounded,\n  chain,\n  constant,\n  failure,\n  gt,\n  gte,\n  integer,\n  intersection,\n  JSONGuard,\n  JSONGuardResult,\n  lte,\n  nullable,\n  number,\n  object,\n  string,\n  success,\n  union,\n} from 'json-guard'\nimport _ from 'lodash'\nimport { fGet } from '../Utils'\nimport { getDefaultPlanParams } from './DefaultPlanParams'\nimport { TPAWParamsV1WithoutHistorical } from './Old/TPAWParamsV1'\nimport { TPAWParamsV10 } from './Old/TPAWParamsV10'\nimport { TPAWParamsV11 } from './Old/TPAWParamsV11'\nimport { TPAWParamsV12 } from './Old/TPAWParamsV12'\nimport { TPAWParamsV13 } from './Old/TPAWParamsV13'\nimport { tpawParamsV1Validator } from './Old/TPAWParamsV1Validator'\nimport { TPAWParamsV2WithoutHistorical } from './Old/TPAWParamsV2'\nimport { tpawParamsV2Validator } from './Old/TPAWParamsV2Validator'\nimport { TPAWParamsV3WithoutHistorical } from './Old/TPAWParamsV3'\nimport { tpawParamsV3Validator } from './Old/TPAWParamsV3Validator'\nimport { TPAWParamsV4 } from './Old/TPAWParamsV4'\nimport { TPAWParamsV5 } from './Old/TPAWParamsV5'\nimport { TPAWParamsV6 } from './Old/TPAWParamsV6'\nimport { TPAWParamsV7 } from './Old/TPAWParamsV7'\nimport { TPAWParamsV8 } from './Old/TPAWParamsV8'\nimport { TPAWParamsV9 } from './Old/TPAWParamsV9'\nimport { Validator } from './Old/Validator'\n\nexport namespace PlanParams14 {\n  export const MAX_LABEL_LENGTH = 150\n  export const MAX_AGE = 120\n  export const MAX_NUM_YEARS_IN_GLIDE_PATH = 1000\n  export const MAX_VALUE_FOR_YEAR_RANGE = 100\n  export const MAX_EXTERNAL_LEGACY_SOURCES = 100\n\n  export type Person = {\n    ages:\n      | { type: 'retired'; current: number; max: number }\n      | { type: 'notRetired'; current: number; retirement: number; max: number }\n    displayName: string | null\n  }\n\n  export type People =\n    | { withPartner: false; person1: Person }\n    | {\n        withPartner: true\n        person2: Person\n        person1: Person\n        withdrawalStart: 'person1' | 'person2'\n        xAxis: 'person1' | 'person2'\n      }\n\n  export type Year =\n    | { type: 'now' }\n    | {\n        type: 'namedAge'\n        person: 'person1' | 'person2'\n        age: 'lastWorkingYear' | 'retirement' | 'max'\n      }\n    | {\n        type: 'numericAge'\n        person: 'person1' | 'person2'\n        age: number\n      }\n\n  export type YearRange =\n    | { type: 'startAndEnd'; start: Year; end: Year }\n    | { type: 'startAndNumYears'; start: Year; numYears: number }\n    | { type: 'endAndNumYears'; end: Year; numYears: number }\n\n  export type ValueForYearRange = {\n    label: string | null\n    yearRange: YearRange\n    value: number\n    nominal: boolean\n    id: number\n  }\n\n  export type LabeledAmount = {\n    label: string | null\n    value: number\n    nominal: boolean\n  }\n\n  export type GlidePath = {\n    start: { stocks: number }\n    intermediate: { year: Year; stocks: number }[]\n    end: { stocks: number }\n  }\n\n  export type TPAWRiskLevel =\n    | 'riskLevel-1'\n    | 'riskLevel-2'\n    | 'riskLevel-3'\n    | 'riskLevel-4'\n\n  export type TPAWRisk = {\n    tpaw: {\n      allocation: GlidePath\n      allocationForLegacy: { stocks: number }\n    }\n    tpawAndSPAW: {\n      spendingCeiling: number | null\n      spendingFloor: number | null\n      spendingTilt: number\n      lmp: number\n    }\n  }\n\n  export type Params = {\n    v: 14\n    strategy: 'TPAW' | 'SPAW' | 'SWR'\n    dialogMode: boolean\n\n    // Basic Inputs\n    people: People\n    currentPortfolioBalance: number\n    futureSavings: ValueForYearRange[]\n    retirementIncome: ValueForYearRange[]\n\n    // Spending Goals\n    extraSpending: {\n      essential: ValueForYearRange[]\n      discretionary: ValueForYearRange[]\n    }\n    legacy: {\n      tpawAndSPAW: {\n        total: number\n        external: LabeledAmount[]\n      }\n    }\n\n    // Risk\n    // useTPAWPreset should be true only if strategy === 'TPAW'\n    risk: ({ useTPAWPreset: true } | ({ useTPAWPreset: false } & TPAWRisk)) & {\n      tpawPreset: TPAWRiskLevel\n      customTPAWPreset: TPAWRisk | null\n      savedTPAWPreset: TPAWRisk | null\n      spawAndSWR: {\n        allocation: GlidePath\n      }\n      swr: {\n        withdrawal:\n          | { type: 'asPercent'; percent: number }\n          | { type: 'asAmount'; amount: number }\n          | { type: 'default' }\n      }\n    }\n\n    // Advanced.\n    returns: {\n      expected:\n        | { type: 'suggested' }\n        | { type: 'oneOverCAPE' }\n        | { type: 'regressionPrediction' }\n        | { type: 'historical' }\n        | { type: 'manual'; stocks: number; bonds: number }\n      historical:\n        | {\n            type: 'default'\n            adjust:\n              | { type: 'by'; stocks: number; bonds: number }\n              | { type: 'to'; stocks: number; bonds: number }\n              | { type: 'toExpected' }\n              | { type: 'none' }\n          }\n        | { type: 'fixed'; stocks: number; bonds: number }\n    }\n    inflation: { type: 'suggested' } | { type: 'manual'; value: number }\n    sampling: 'monteCarlo' | 'historical'\n\n    // Other.\n    display: {\n      alwaysShowAllYears: boolean\n    }\n  }\n\n  // ----------- VALIDATOR  ---------//\n\n  const _ageRange = chain(number, gte(0), lte(MAX_AGE))\n\n  const _ages: JSONGuard<Person['ages']> = chain(\n    union(\n      object({\n        type: constant('retired'),\n        current: _ageRange,\n        max: _ageRange,\n      }),\n      object({\n        type: constant('notRetired'),\n        current: _ageRange,\n        retirement: _ageRange,\n        max: _ageRange,\n      }),\n    ),\n    (ages: Person['ages']): JSONGuardResult<Person['ages']> => {\n      const { current, max } = ages\n      if (max < current + 1) {\n        return failure('Max age should be at least one year after current age.')\n      }\n      if (ages.type === 'notRetired') {\n        const { retirement } = ages\n        if (retirement < current + 1) {\n          return failure(\n            'Retirement age should be at least one year after current age.',\n          )\n        }\n        if (max < retirement + 1) {\n          return failure(\n            'Max age should be at least one year after retirement age.',\n          )\n        }\n      }\n      return success(ages)\n    },\n  )\n\n  const person: JSONGuard<Person> = object({\n    ages: _ages,\n    displayName: nullable(chain(string, bounded(MAX_LABEL_LENGTH))),\n  })\n\n  const people: JSONGuard<Params['people']> = union(\n    object({\n      withPartner: constant(false),\n      person1: person,\n    }),\n    object({\n      withPartner: constant(true),\n      person2: person,\n      person1: person,\n      withdrawalStart: union(constant('person1'), constant('person2')),\n      xAxis: union(constant('person1'), constant('person2')),\n    }),\n  )\n\n  const year = (people: Params['people'] | null) =>\n    union(\n      object({ type: constant('now') }),\n      chain(\n        object({\n          type: constant('namedAge'),\n          person: union(constant('person1'), constant('person2')),\n          age: union(\n            constant('lastWorkingYear'),\n            constant('retirement'),\n            constant('max'),\n          ),\n        }),\n        (x) => {\n          if (!people) return success(x)\n          let person: Person\n          if (x.person === 'person1') {\n            person = people.person1\n          } else {\n            if (!people.withPartner)\n              return failure('In terms of partner, but there is no partner.')\n            person = people.person2\n          }\n          if (\n            (x.age === 'retirement' || x.age === 'lastWorkingYear') &&\n            person.ages.type === 'retired'\n          ) {\n            return failure(\n              `In terms retirement age of ${x.person}, but ${x.person} is already retired.`,\n            )\n          }\n          return success(x)\n        },\n      ),\n      chain(\n        object({\n          type: constant('numericAge'),\n          person: union(constant('person1'), constant('person2')),\n          age: chain(number, integer),\n        }),\n        (x) => {\n          if (!people) return success(x)\n          if (x.person === 'person2' && !people.withPartner)\n            return failure('In terms of partner, but there is no partner.')\n          return success(x)\n        },\n      ),\n    )\n\n  const yearRange = (people: Params['people'] | null): JSONGuard<YearRange> => {\n    const yr = year(people)\n    return union(\n      object({ type: constant('startAndEnd'), start: yr, end: yr }),\n      object({\n        type: constant('startAndNumYears'),\n        start: yr,\n        numYears: chain(number, integer, gt(0)),\n      }),\n      object({\n        type: constant('endAndNumYears'),\n        end: yr,\n        numYears: chain(number, integer, gt(0)),\n      }),\n    )\n  }\n\n  const valueForYearRange = (\n    people: Params['people'] | null,\n  ): JSONGuard<ValueForYearRange> =>\n    object({\n      // Not trimmed because it won't allow space even temporarily.\n      label: nullable(chain(string, bounded(MAX_LABEL_LENGTH))),\n      yearRange: yearRange(people),\n      value: chain(number, gte(0)),\n      nominal: boolean,\n      id: chain(number, integer, gte(0)),\n    })\n  const valueForYearRangeArr = (\n    people: Params['people'] | null = null,\n  ): JSONGuard<ValueForYearRange[]> =>\n    array(valueForYearRange(people), MAX_VALUE_FOR_YEAR_RANGE)\n\n  const extraSpending = (\n    people: Params['people'] | null = null,\n  ): JSONGuard<Params['extraSpending']> =>\n    object({\n      essential: array(valueForYearRange(people), MAX_VALUE_FOR_YEAR_RANGE),\n      discretionary: array(valueForYearRange(people), MAX_VALUE_FOR_YEAR_RANGE),\n    })\n\n  const glidePath = (params: Params | null): JSONGuard<GlidePath> =>\n    object({\n      start: object({ stocks: chain(number, gte(0), lte(1)) }),\n      intermediate: array(\n        object({\n          year: year(params?.people ?? null),\n          stocks: chain(number, gte(0), lte(1)),\n        }),\n        MAX_NUM_YEARS_IN_GLIDE_PATH - 2,\n      ),\n      end: object({ stocks: chain(number, gte(0), lte(1)) }),\n    })\n\n  const tpawRisk = (params: Params | null): JSONGuard<TPAWRisk> =>\n    object(\n      {\n        tpaw: object({\n          allocation: glidePath(params),\n          allocationForLegacy: object({\n            stocks: chain(number, gte(0), lte(1)),\n          }),\n        }),\n        tpawAndSPAW: chain(\n          object({\n            spendingCeiling: nullable(chain(number, gte(0))),\n            spendingFloor: nullable(chain(number, gte(0))),\n            spendingTilt: chain(number, gte(-0.03), lte(0.03)),\n            lmp: chain(number, gte(0)),\n          }),\n          (x) =>\n            x.spendingCeiling !== null &&\n            (x.spendingFloor ?? 0) > x.spendingCeiling\n              ? failure('Spending Floor is greater than spending ceiling.')\n              : success(x),\n        ),\n      },\n      'extraKeysOk',\n    )\n\n  const risk = (params: Params | null): JSONGuard<Params['risk']> =>\n    intersection(\n      union(\n        object(\n          {\n            useTPAWPreset: chain(constant(true), (x) =>\n              !params || params.strategy === 'TPAW'\n                ? success(x)\n                : failure('useTPAWPreset is true but strategy is not TPAW.'),\n            ),\n          },\n          'extraKeysOk',\n        ),\n        intersection(\n          object({ useTPAWPreset: constant(false) }, 'extraKeysOk'),\n          tpawRisk(params),\n        ),\n      ),\n      object(\n        {\n          tpawPreset: union(\n            constant('riskLevel-1'),\n            constant('riskLevel-2'),\n            constant('riskLevel-3'),\n            constant('riskLevel-4'),\n          ),\n          customTPAWPreset: nullable(tpawRisk(params)),\n          savedTPAWPreset: nullable(tpawRisk(params)),\n          swr: object({\n            withdrawal: union(\n              object({\n                type: constant('asPercent'),\n                percent: chain(number, gte(0), lte(1)),\n              }),\n              object({\n                type: constant('asAmount'),\n                amount: chain(number, integer, gte(0)),\n              }),\n              object({ type: constant('default') }),\n            ),\n          }),\n          spawAndSWR: object({\n            allocation: glidePath(params),\n          }),\n        },\n        'extraKeysOk',\n      ),\n    )\n\n  const returns: JSONGuard<Params['returns']> = object({\n    expected: union(\n      object({ type: constant('suggested') }),\n      object({ type: constant('oneOverCAPE') }),\n      object({ type: constant('regressionPrediction') }),\n      object({ type: constant('historical') }),\n      object({\n        type: constant('manual'),\n        stocks: chain(number, gte(-0.01), lte(0.1)),\n        bonds: chain(number, gte(-0.01), lte(0.1)),\n      }),\n    ),\n    historical: union(\n      object({\n        type: constant('default'),\n        adjust: union(\n          object({\n            type: constant('to'),\n            stocks: number,\n            bonds: number,\n          }),\n          object({\n            type: constant('by'),\n            stocks: number,\n            bonds: number,\n          }),\n          object({ type: constant('toExpected') }),\n          object({ type: constant('none') }),\n        ),\n      }),\n      object({\n        type: constant('fixed'),\n        stocks: number,\n        bonds: number,\n      }),\n    ),\n  })\n\n  const legacy: JSONGuard<Params['legacy']> = object({\n    tpawAndSPAW: object({\n      total: chain(number, gte(0)),\n      external: array(\n        object({\n          label: nullable(chain(string, bounded(MAX_LABEL_LENGTH))),\n          value: chain(number, gte(0)),\n          nominal: boolean,\n        }),\n        MAX_EXTERNAL_LEGACY_SOURCES,\n      ),\n    }),\n  })\n\n  const inflation: JSONGuard<Params['inflation']> = union(\n    object({ type: constant('suggested') }),\n    object({\n      type: constant('manual'),\n      value: chain(number, gte(-0.01), lte(0.1)),\n    }),\n  )\n\n  const params = (x: Params | null): JSONGuard<Params> =>\n    object({\n      v: constant(14),\n      strategy: union(constant('TPAW'), constant('SPAW'), constant('SWR')),\n      dialogMode: boolean,\n      people,\n      currentPortfolioBalance: chain(number, gte(0)),\n      futureSavings: valueForYearRangeArr(x?.people ?? null),\n      retirementIncome: valueForYearRangeArr(x?.people ?? null),\n      extraSpending: extraSpending(x?.people ?? null),\n      legacy,\n      risk: risk(x),\n      returns,\n      inflation,\n      sampling: union(constant('monteCarlo'), constant('historical')),\n      display: object({ alwaysShowAllYears: boolean }),\n    })\n\n  const v14Guard: JSONGuard<Params> = chain(params(null), (x) => params(x)(x))\n\n  export const guard: JSONGuard<Params> = (x: unknown) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    if ((x as any).v === 14) {\n      return v14Guard(x)\n    } else {\n      const v13Result = v13Guard(x)\n      if (v13Result.error) return v13Result\n      const v13 = v13Result.value\n      const v14: Params = {\n        ...v13,\n        v: 14,\n        risk:\n          v13.risk.tpawPreset === 'custom'\n            ? {\n                useTPAWPreset: false,\n                tpawPreset: getDefaultPlanParams().risk.tpawPreset,\n                customTPAWPreset: v13.risk.customTPAWPreset,\n                savedTPAWPreset: null,\n                tpaw: _.cloneDeep(fGet(v13.risk.customTPAWPreset).tpaw),\n                tpawAndSPAW: _.cloneDeep(\n                  fGet(v13.risk.customTPAWPreset).tpawAndSPAW,\n                ),\n                swr: v13.risk.swr,\n                spawAndSWR: v13.risk.spawAndSWR,\n              }\n            : {\n                ...v13.risk,\n                tpawPreset: v13.risk.tpawPreset,\n                savedTPAWPreset: null,\n              },\n      }\n      return success(v14Guard(v14).force())\n    }\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst v13Guard: JSONGuard<TPAWParamsV13.Params> = (parsed: any) => {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n    const version = 'v' in parsed ? parsed.v : 1\n    if (typeof version !== 'number') return failure('Version is not a number.')\n    if (version > 13 || version < 0) return failure('Invalid version number.')\n\n    const v1 = version === 1 ? tpawParamsV1Validator(parsed) : null\n    const v2 =\n      version === 2 ? tpawParamsV2Validator(parsed) : v1 ? _v1ToV2(v1) : null\n\n    const v3 =\n      version === 3 ? tpawParamsV3Validator(parsed) : v2 ? _v2ToV3(v2) : null\n    const v4 =\n      version === 4 ? TPAWParamsV4.validator(parsed) : v3 ? _v3ToV4(v3) : null\n    const v5 =\n      version === 5 ? TPAWParamsV5.validator(parsed) : v4 ? _v4ToV5(v4) : null\n\n    const v6 =\n      version === 6\n        ? TPAWParamsV6.validator(parsed)\n        : v5\n        ? TPAWParamsV6.fromV5(v5)\n        : null\n\n    const v7 =\n      version === 7\n        ? TPAWParamsV7.validator(parsed)\n        : v6\n        ? TPAWParamsV7.fromV6(v6)\n        : null\n\n    const v8 =\n      version === 8\n        ? TPAWParamsV8.validator(parsed)\n        : v7\n        ? TPAWParamsV8.fromV7(v7)\n        : null\n\n    const v9 =\n      version === 9\n        ? TPAWParamsV9.validator(parsed)\n        : v8\n        ? TPAWParamsV9.fromV8(v8)\n        : null\n\n    const v10 =\n      version === 10\n        ? TPAWParamsV10.validator(parsed)\n        : v9\n        ? TPAWParamsV10.fromV9(v9)\n        : null\n\n    const v11 =\n      version === 11\n        ? TPAWParamsV11.validator(parsed)\n        : v10\n        ? TPAWParamsV11.fromV10(v10)\n        : null\n\n    const v12 =\n      version === 12\n        ? TPAWParamsV12.validator(parsed)\n        : v11\n        ? TPAWParamsV12.fromV11(v11)\n        : null\n\n    return success(\n      version === 13\n        ? TPAWParamsV13.validator(parsed)\n        : TPAWParamsV13.fromV12(fGet(v12)),\n    )\n  } catch (e) {\n    if (e instanceof Validator.Failed) {\n      return failure(e.fullMessage)\n    } else {\n      throw e\n    }\n  }\n}\n\nconst _v1ToV2 = (\n  v1: TPAWParamsV1WithoutHistorical,\n): TPAWParamsV2WithoutHistorical => {\n  type ValueForYearRange = TPAWParamsV2WithoutHistorical['savings'][number]\n  const savings: ValueForYearRange[] = []\n  const retirementIncome: ValueForYearRange[] = []\n  v1.savings.forEach((x) => {\n    const start = _numericYear(v1, x.yearRange.start)\n    const end = _numericYear(v1, x.yearRange.end)\n    if (start < v1.age.retirement && end >= v1.age.retirement) {\n      savings.push({\n        ...x,\n        yearRange: { ...x.yearRange, end: 'lastWorkingYear' as const },\n      })\n      retirementIncome.push({\n        ...x,\n        yearRange: { ...x.yearRange, start: 'retirement' as const },\n      })\n    } else {\n      start < v1.age.retirement ? savings.push(x) : retirementIncome.push(x)\n    }\n  })\n\n  return {\n    v: 2,\n    ...v1,\n    savings,\n    retirementIncome,\n  }\n}\n\nconst _v2ToV3 = (\n  v2: TPAWParamsV2WithoutHistorical,\n): TPAWParamsV3WithoutHistorical => {\n  return {\n    ..._.cloneDeep(v2),\n    v: 3,\n    spendingFloor: null,\n  }\n}\nconst _v3ToV4 = (\n  v3: TPAWParamsV3WithoutHistorical,\n): TPAWParamsV4.ParamsWithoutHistorical => {\n  const { retirementIncome, withdrawals, ...rest } = _.cloneDeep(v3)\n  const addId = (\n    x: TPAWParamsV3WithoutHistorical['savings'][number],\n    id: number,\n  ): TPAWParamsV4.ValueForYearRange => ({ ...x, id })\n  retirementIncome\n  return {\n    ...rest,\n    v: 4,\n    retirementIncome: retirementIncome.map(addId),\n    savings: retirementIncome.map(addId),\n    withdrawals: {\n      fundedByBonds: withdrawals.fundedByBonds.map(addId),\n      fundedByRiskPortfolio: withdrawals.fundedByRiskPortfolio.map(addId),\n    },\n  }\n}\nconst _v4ToV5 = (\n  v4: TPAWParamsV4.ParamsWithoutHistorical,\n): TPAWParamsV5.ParamsWithoutHistorical => {\n  const { age, savings, retirementIncome, withdrawals, ...rest } = v4\n\n  const year = (year: TPAWParamsV4.YearRangeEdge): TPAWParamsV5.Year =>\n    year === 'start'\n      ? { type: 'now' }\n      : typeof year === 'number'\n      ? { type: 'numericAge', person: 'person1', age: year }\n      : {\n          type: 'namedAge',\n          person: 'person1',\n          age: year === 'end' ? 'max' : year,\n        }\n\n  const valueForYearRange = ({\n    yearRange,\n    ...rest\n  }: TPAWParamsV4.ValueForYearRange): TPAWParamsV5.ValueForYearRange => ({\n    yearRange: {\n      type: 'startAndEnd',\n      start: year(yearRange.start),\n      end: year(yearRange.end),\n    },\n    ...rest,\n  })\n\n  const result: TPAWParamsV5.ParamsWithoutHistorical = {\n    ...rest,\n    v: 5,\n    people: {\n      withPartner: false,\n      person1: {\n        ages:\n          age.start === age.retirement\n            ? {\n                type: 'retired',\n                current: age.start,\n                max: age.end,\n              }\n            : {\n                type: 'notRetired',\n                current: age.start,\n                retirement: age.retirement,\n                max: age.end,\n              },\n        displayName: null,\n      },\n    },\n    savings: savings.map(valueForYearRange),\n    retirementIncome: retirementIncome.map(valueForYearRange),\n    withdrawals: {\n      fundedByBonds: withdrawals.fundedByBonds.flatMap(valueForYearRange),\n      fundedByRiskPortfolio:\n        withdrawals.fundedByRiskPortfolio.flatMap(valueForYearRange),\n    },\n  }\n\n  TPAWParamsV5.validator(result)\n  return result\n}\n\nconst _numericYear = (\n  { age }: { age: { start: number; retirement: number; end: number } },\n  x: TPAWParamsV4.YearRangeEdge,\n) =>\n  x === 'start'\n    ? age.start\n    : x === 'lastWorkingYear'\n    ? age.retirement - 1\n    : x === 'retirement'\n    ? age.retirement\n    : x === 'end'\n    ? age.end\n    : x\n"]}