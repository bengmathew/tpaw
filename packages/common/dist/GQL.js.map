{"version":3,"file":"GQL.js","sourceRoot":"","sources":["../src/GQL.ts"],"names":[],"mappings":";;;AAAA,2CAA4E;AAE5E,IAAiB,GAAG,CAuBnB;AAvBD,WAAiB,GAAG;IAClB,MAAM,OAAO,GAA8B,CAAC,CAAC,EAAE,EAAE,CAC/C,CAAC,CAAC,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAA,oBAAO,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAA,iBAAI,EAAC,wBAAwB,CAAC,CAAA;IAE5E,MAAM,QAAQ,GAA8B,CAAC,CAAC,EAAE,EAAE,CAChD,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAA,oBAAO,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAA,iBAAI,EAAC,eAAe,CAAC,CAAA;IAEnD,MAAM,KAAK,GAAsB,IAAA,kBAAK,EAAC,mBAAM,EAAE,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE;QAC5D,MAAM,WAAW,GAAG,wBAAwB,CAAA;QAC5C,MAAM,SAAS,GACb,6GAA6G,CAAA;QAE/G,MAAM,UAAU,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;QACtC,IAAI,UAAU,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAAE,OAAO,IAAA,iBAAI,EAAC,mBAAmB,CAAC,CAAA;QAC3E,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAChC,OAAO,IAAA,iBAAI,EAAC,8BAA8B,CAAC,CAAA;QAC7C,OAAO,IAAA,oBAAO,EAAC,CAAC,CAAC,CAAA;IACnB,CAAC,CAAC,CAAA;IAEF,IAAiB,oBAAoB,CAGpC;IAHD,WAAiB,oBAAoB;QACtB,2BAAM,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,mBAAM,EAAE,CAAA;QAChC,0BAAK,GAAG,IAAA,mBAAM,EAAC,qBAAA,MAAM,CAAC,CAAA;IACrC,CAAC,EAHgB,oBAAoB,GAApB,wBAAoB,KAApB,wBAAoB,QAGpC;AACH,CAAC,EAvBgB,GAAG,GAAH,WAAG,KAAH,WAAG,QAuBnB","sourcesContent":["import { chain, fail, JSONGuard, object, string, succeed } from 'json-guard'\n\nexport namespace API {\n  const trimmed: JSONGuard<string, string> = (x) =>\n    x.trim().length === x.length ? succeed(x) : fail('String is not trimmed.')\n\n  const nonEmpty: JSONGuard<string, string> = (x) =>\n    x.length > 0 ? succeed(x) : fail('Empty string.')\n\n  const email: JSONGuard<string> = chain(string, trimmed, (x) => {\n    const EMAIL_REGEX = /^[^@]+@([^@]+\\.[^@]+)$/\n    const DNS_REGEX =\n      /^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])$/\n\n    const emailMatch = EMAIL_REGEX.exec(x)\n    if (emailMatch === null || !emailMatch[1]) return fail('Email is invalid.')\n    if (!DNS_REGEX.test(emailMatch[1]))\n      return fail('DNS part of email is invalid')\n    return succeed(x)\n  })\n\n  export namespace SendSignInEmailInput {\n    export const guards = { email, dest: string }\n    export const check = object(guards)\n  }\n}\n"]}